// import { useState } from "react";
// import { useQuery } from "@tanstack/react-query";
// import { fetchPerson } from "../Person/fetchPerson";

// export interface Person {
//   name: string;
//   height: string;
//   mass: string;
//   hair_color: string;
//   skin_color: string;
//   eye_color: string;
//   birth_year: string;
//   gender: string;
//   // –º–æ–∂–µ—à –¥–æ–¥–∞—Ç–∏ —â–µ –ø–æ–ª—è –∑–∞ –ø–æ—Ç—Ä–µ–±–∏
// }

// export default function Person() {
//   const [count, setCount] = useState(2); // –î–∏–Ω–∞–º—ñ—á–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ ID 2

//   const { data, isLoading, isError, error } = useQuery({
//     queryKey: ["person", count],
//     queryFn: () => fetchPerson(count),
//   });

//   if (isLoading) return <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>;
//   if (isError && error instanceof Error) return <p>–ü–æ–º–∏–ª–∫–∞: {error.message}</p>;

//   return (
//     <div style={{ marginTop: "2rem" }}>
//       <h2>–î–∞–Ω—ñ –ø—Ä–æ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤</h2>

//       <button onClick={() => setCount((prev) => prev + 1)}>
//         –ù–∞—Å—Ç—É–ø–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂ (ID: {count})
//       </button>

//       {isLoading && <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>}

//       {isError && error instanceof Error && <p>–ü–æ–º–∏–ª–∫–∞: {error.message}</p>}

//       {data && (
//         <>
//           <h3>üìå –°—Ç–∞—Ç–∏—á–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂ (ID: 1)</h3>
//           <pre>{JSON.stringify(data.staticPerson, null, 2)}</pre>

//           <h3>üîÅ –î–∏–Ω–∞–º—ñ—á–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂ (ID: {count})</h3>
//           <pre>{JSON.stringify(data.dynamicPerson, null, 2)}</pre>
//         </>
//       )}
//     </div>
//   );
// }
